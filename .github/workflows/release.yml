name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-release:
    name: Build Release Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            artifact: vicemcp-linux-x64
          - os: windows-latest
            rid: win-x64
            artifact: vicemcp-windows-x64
          - os: macos-latest
            rid: osx-x64
            artifact: vicemcp-macos-x64
          - os: macos-latest
            rid: osx-arm64
            artifact: vicemcp-macos-arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish self-contained
      run: |
        dotnet publish ViceMCP/ViceMCP.csproj \
          --configuration Release \
          --runtime ${{ matrix.rid }} \
          --self-contained true \
          --output ./publish/${{ matrix.artifact }} \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true \
          -p:IncludeNativeLibrariesForSelfExtract=true

    - name: Create archive (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd publish
        tar -czf ${{ matrix.artifact }}.tar.gz ${{ matrix.artifact }}
        cd ..

    - name: Create archive (Windows)
      if: runner.os == 'Windows'
      run: |
        cd publish
        7z a -tzip ${{ matrix.artifact }}.zip ${{ matrix.artifact }}
        cd ..

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: |
          publish/*.tar.gz
          publish/*.zip
        retention-days: 7

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -z "$PREV_TAG" ]; then
          echo "No previous tag found, including all commits"
          COMMITS=$(git log --pretty=format:"- %s (%h)" --reverse)
        else
          echo "Previous tag: $PREV_TAG"
          COMMITS=$(git log --pretty=format:"- %s (%h)" --reverse $PREV_TAG..HEAD)
        fi
        
        # Create changelog
        cat << EOF > CHANGELOG.md
        ## What's Changed
        
        ### Commits
        $COMMITS
        
        ### Full Changelog
        ${PREV_TAG:+$PREV_TAG...}${{ steps.version.outputs.version }}
        EOF
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: ViceMCP ${{ steps.version.outputs.version }}
        body: |
          # ViceMCP ${{ steps.version.outputs.version }}
          
          AI-powered bridge between Model Context Protocol and VICE Commodore emulator.
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          Download the appropriate archive for your platform and extract it. The binary is self-contained and includes all dependencies.
          
          ### Configure your MCP client
          
          Add to your MCP client configuration:
          ```json
          {
            "mcpServers": {
              "vicemcp": {
                "command": "/path/to/vicemcp",
                "env": {
                  "VICE_BIN_PATH": "/path/to/vice/bin"
                }
              }
            }
          }
          ```
        files: |
          artifacts/**/*.tar.gz
          artifacts/**/*.zip
        draft: false
        prerelease: false

  docker-release:
    name: Docker Release
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        # Remove 'v' prefix for Docker tags
        echo "docker_version=${version#v}" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      if: ${{ secrets.DOCKER_USERNAME != '' }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./ViceMCP/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/vicemcp:latest
          ghcr.io/${{ github.repository_owner }}/vicemcp:${{ steps.version.outputs.docker_version }}
          ${{ secrets.DOCKER_USERNAME != '' && format('{0}/vicemcp:latest', secrets.DOCKER_USERNAME) || '' }}
          ${{ secrets.DOCKER_USERNAME != '' && format('{0}/vicemcp:{1}', secrets.DOCKER_USERNAME, steps.version.outputs.docker_version) || '' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64